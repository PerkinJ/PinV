{"version":3,"sources":["../../src/utils/utils.js"],"names":["handleD3Color","colorGenerator","addEvent","removeEvent","d3","str","indexOf","hsl","rgb","numberOfSteps","colors","range","map","index","obj","type","fn","attachEvent","window","event","addEventListener","detachEvent","removeEventListener","colour","scale","scaleOrdinal","schemeCategory20","num","parseInt","slice","bumps","n","m","a","i","bump","x","Math","random","y","z","w","exp","exports","shade","hex","percent","R","G","B","red","green","blue","number","min","round","length","toString","calculateScales","chartWidth","chartHeight","xValues","yValues","xDomain","yDomain","xScale","yScale","xdomain","ydomain","Object","prototype","call","scaleTime","scaleLinear","extent","undefined","domain","flattenData","data","xAccessor","yAccessor","allValues","coincidentCoordinateCheck","forEach","series","values","item","j","isNaN","push","yNode","keys","key","xyCoords","hasOwnProperty","pointItem","coord","d","id","name","seriesIndex"],"mappings":"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","file":"utils.js","sourcesContent":["import * as d3 from 'd3'\n// 检测color的格式是否是hsl形式\nexport function handleD3Color(str) {\n\tif (str && typeof str === 'string') {\n\t\tif (str.indexOf('hsl') > -1) {\n\t\t\treturn d3.hsl(str)\n\t\t} else {\n\t\t\treturn d3.rgb(str)\n\t\t}\n\t}\n}\n\n// 颜色生成器\nexport function colorGenerator(numberOfSteps) {\n\tconst colors = d3.range(numberOfSteps).map((index) => d3.hsl((360 / numberOfSteps) * index, 0.8, 0.64))\n\treturn (index) => colors[index]\n}\n\n// 监听器\nexport function addEvent(obj, type, fn) {\n\tif (obj.attachEvent) {\n\t\tobj['e' + type + fn] = fn\n\t\tobj[type + fn] = function () { obj['e' + type + fn](window.event) }\n\t\tobj.attachEvent('on' + type, obj[type + fn])\n\t} else\n\t\tobj.addEventListener(type, fn, false)\n}\n\nexport function removeEvent(obj, type, fn) {\n\tif (obj.detachEvent) {\n\t\tobj.detachEvent('on' + type, obj[type + fn])\n\t\tobj[type + fn] = null\n\t} else\n\t\tobj.removeEventListener(type, fn, false)\n}\n\n\n\n/**\n * Color scale generator\n * @returns {function} color generator\n */\nexport const colour = (() => {\n\tconst scale = d3.scaleOrdinal(d3.schemeCategory20)\n\treturn (num) => parseInt(scale(num).slice(1), 16)\n})()\n\n\n// Inspired by Lee Byron’s test data generator.\nexport const bumps = (n, m) => {\n\tlet a = [], i\n\tfor (i = 0; i < n; ++i) a[i] = 0\n\tfor (i = 0; i < m; ++i) bump(a, n)\n\treturn a\n}\n\nfunction bump(a, n) {\n\tlet x = 1 / (0.1 + Math.random()),\n\t\ty = 2 * Math.random() - 0.5,\n\t\tz = 10 / (0.1 + Math.random())\n\tfor (let i = 0; i < n; i++) {\n\t\tlet w = (i / n - y) * z\n\t\ta[i] += x * Math.exp(-w * w)\n\t}\n}\n\nexports.shade = (hex, percent) => {\n\tlet R, G, B, red, green, blue, number\n\tlet min = Math.min, round = Math.round\n\tif (hex.length !== 7) { return hex }\n\tnumber = parseInt(hex.slice(1), 16)\n\tR = number >> 16\n\tG = number >> 8 & 0xFF\n\tB = number & 0xFF\n\tred = min(255, round((1 + percent) * R)).toString(16)\n\tif (red.length === 1) red = '0' + red\n\tgreen = min(255, round((1 + percent) * G)).toString(16)\n\tif (green.length === 1) green = '0' + green\n\tblue = min(255, round((1 + percent) * B)).toString(16)\n\tif (blue.length === 1) blue = '0' + blue\n\treturn `#${red}${green}${blue}`\n}\n\nexports.calculateScales = (chartWidth, chartHeight, xValues, yValues, xDomain, yDomain) => {\n\n\tlet xScale, yScale, xdomain, ydomain\n\txDomain = xDomain || [], yDomain = yDomain || []\n\tif (xValues.length > 0 && Object.prototype.toString.call(xValues[0]) === '[object Date]') {\n\t\txScale = d3.scaleTime()\n\t\t\t.range([0, chartWidth])\n\t} else {\n\t\txScale = d3.scaleLinear()\n\t\t\t.range([0, chartWidth])\n\t}\n\txdomain = d3.extent(xValues)\n\tif (xDomain[0] !== undefined && xDomain[0] !== null) xdomain[0] = xDomain[0]\n\tif (xDomain[1] !== undefined && xDomain[1] !== null) xdomain[1] = xDomain[1]\n\txScale.domain(xdomain)\n\n\tif (yValues.length > 0 && Object.prototype.toString.call(yValues[0]) === '[object Date]') {\n\t\tyScale = d3.scaleTime()\n\t\t\t.range([chartHeight, 0])\n\t} else {\n\t\tyScale = d3.scaleLinear()\n\t\t\t.range([chartHeight, 0])\n\t}\n\n\tydomain = d3.extent(yValues)\n\tif (yDomain[0] !== undefined && yDomain[0] !== null) ydomain[0] = yDomain[0]\n\tif (yDomain[1] !== undefined && yDomain[1] !== null) ydomain[1] = yDomain[1]\n\tyScale.domain(ydomain)\n\n\treturn {\n\t\txScale,\n\t\tyScale\n\t}\n\n}\n\nexports.flattenData = (data, xAccessor, yAccessor) => {\n\n\tlet allValues = []\n\tlet xValues = []\n\tlet yValues = []\n\tlet coincidentCoordinateCheck = {}\n\n\tdata.forEach((series, i) => {\n\t\tseries.values.forEach((item, j) => {\n\n\t\t\tlet x = xAccessor(item)\n\n\t\t\t// Check for NaN since d3's Voronoi cannot handle NaN values\n\t\t\t// Go ahead and Proceed to next iteration since we don't want NaN\n\t\t\t// in allValues or in xValues or yValues\n\t\t\tif (isNaN(x)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\txValues.push(x)\n\n\t\t\tlet y = yAccessor(item)\n\t\t\t// when yAccessor returns an object (as in the case of candlestick)\n\t\t\t// iterate over the keys and push all the values to yValues array\n\t\t\tlet yNode\n\t\t\tif (typeof y === 'object' && Object.keys(y).length > 0) {\n\t\t\t\tObject.keys(y).forEach( (key)=> {\n\t\t\t\t\t// Check for NaN since d3's Voronoi cannot handle NaN values\n\t\t\t\t\t// Go ahead and Proceed to next iteration since we don't want NaN\n\t\t\t\t\t// in allValues or in xValues or yValues\n\t\t\t\t\tif (isNaN(y[key])) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tyValues.push(y[key])\n\t\t\t\t\t// if multiple y points are to be plotted for a single x\n\t\t\t\t\t// as in the case of candlestick, default to y value of 0\n\t\t\t\t\tyNode = 0\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Check for NaN since d3's Voronoi cannot handle NaN values\n\t\t\t\t// Go ahead and Proceed to next iteration since we don't want NaN\n\t\t\t\t// in allValues or in xValues or yValues\n\t\t\t\tif (isNaN(y)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tyValues.push(y)\n\t\t\t\tyNode = y\n\t\t\t}\n\n\t\t\tlet xyCoords = `${x}-${yNode}`\n\t\t\tif (coincidentCoordinateCheck.hasOwnProperty(xyCoords)) {\n\t\t\t\t// Proceed to next iteration if the x y pair already exists\n\t\t\t\t// d3's Voronoi cannot handle NaN values or coincident coords\n\t\t\t\t// But we push them into xValues and yValues above because\n\t\t\t\t// we still may handle them there (labels, etc.)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tcoincidentCoordinateCheck[xyCoords] = ''\n\n\t\t\tlet pointItem = {\n\t\t\t\tcoord: {\n\t\t\t\t\tx,\n\t\t\t\t\ty: yNode\n\t\t\t\t},\n\t\t\t\td: item,\n\t\t\t\tid: series.name + j,\n\t\t\t\tseries,\n\t\t\t\tseriesIndex: i\n\t\t\t}\n\t\t\tallValues.push(pointItem)\n\t\t})\n\t})\n\n\treturn {\n\t\tallValues,\n\t\txValues,\n\t\tyValues\n\t}\n}\n"]}