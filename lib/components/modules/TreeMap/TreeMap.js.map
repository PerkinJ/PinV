{"version":3,"sources":["../../../../src/components/modules/TreeMap/TreeMap.js"],"names":["d3","TreeMap","props","sumBySize","d","value","state","render","data","width","height","paddingInner","fader","color","interpolateRgb","scaleOrdinal","schemeCategory20c","map","format","treemap","tile","treemapResquarify","size","round","treemapData","JSON","stringify","root","hierarchy","eachBefore","id","parent","name","sum","sort","a","b","leaves","fontSize","length","index","x0","y0","x1","y1","split","defaultProps"],"mappings":"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","file":"TreeMap.js","sourcesContent":["import { h, Component } from 'preact'\nimport * as d3 from 'd3'\n\nclass TreeMap extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\n\t\t}\n\t}\n\tstatic defaultProps = {\n\t\twidth: 960,\n\t\theight: 600,\n\t\tpaddingInner: 1,\n\t\tvalue: 'value'\n\t}\n\tsumBySize = (d) => d[this.props.value]\n\trender({ data, width, height, paddingInner }) {\n\t\tlet fader = function (color) { return d3.interpolateRgb(color, \"#fff\")(0.2) },\n\t\t\tcolor = d3.scaleOrdinal(d3.schemeCategory20c.map(fader)),\n\t\t\tformat = d3.format(\",d\")\n\n\t\tlet treemap = d3.treemap()\n\t\t\t.tile(d3.treemapResquarify)\n\t\t\t.size([width, height])\n\t\t\t.round(true)\n\t\t\t.paddingInner(paddingInner)\n\t\tlet treemapData = []\n\t\tif (JSON.stringify(data) !== '{}') {\n\t\t\tlet root = d3.hierarchy(data)\n\t\t\t\t.eachBefore(d => d.data.id = (d.parent ? d.parent.data.id + \".\" : \"\") + d.data.name)\n\t\t\t\t.sum(this.sumBySize)\n\t\t\t\t.sort((a, b) => b.height - a.height || b.value - a.value)\n\n\t\t\ttreemap(root)\n\t\t\ttreemapData = root.leaves()\n\t\t}\n\n\t\treturn (\n\t\t\t<svg width={width} height={height} style={{ fontSize: 10 }}>\n\t\t\t\t{treemapData.length > 0 &&treemapData.map((d, index) => (\n\t\t\t\t\t<g key={index} transform={`translate(${d.x0},${d.y0})`}>\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\tid={d.data.id}\n\t\t\t\t\t\t\twidth={d.x1 - d.x0}\n\t\t\t\t\t\t\theight={d.y1 - d.y0}\n\t\t\t\t\t\t\tfill={color(d.parent.data.id)} />\n\t\t\t\t\t\t<clipPath id={`clip-${d.data.id}`}>\n\t\t\t\t\t\t\t<use href={`#${d.data.id}`} />\n\t\t\t\t\t\t</clipPath>\n\t\t\t\t\t\t<text clip-path={`url(#clip-${d.data.id})`}>\n\t\t\t\t\t\t\t<tspan x={4} y={12}>{d.data.name.split(/(?=[A-Z][^A-Z])/g)}</tspan>\n\t\t\t\t\t\t</text>\n\t\t\t\t\t\t<title>{d.data.id + \"\\n\" + format(d.value)}</title>\n\t\t\t\t\t</g>\n\t\t\t\t))}\n\t\t\t</svg>\n\t\t)\n\t}\n}\n\nexport default TreeMap\n"]}