{"version":3,"sources":["../../../../src/components/modules/BarChart/BarChart.js"],"names":["d3","BarChart","props","state","tooltip","x","y","child","show","changeState","componentWillReceiveProps","setState","getViewBox","viewBoxObject","v","width","height","join","viewBox","getDimensions","horizontal","margins","xOrient","xAxisOffset","yAxisOffset","yOrient","getYOrient","svgWidth","svgHeight","xOffset","yOffset","svgMargins","trans","center","left","top","right","bottom","Math","abs","innerHeight","innerWidth","onMouseOver","dataPoint","showTooltip","tooltipFormat","call","onMouseLeave","_getStackedValuesMaxY","_data","max","d","val","_getStackedValuesMinY","min","_getLabels","series","data","forEach","push","key","_stack","stack","keys","order","stackOrderNone","offset","stackOffsetNone","render","xScale","scaleOrdinal","domain","range","rangeRoundBandsPadding","yScale","scaleLinear","length","legend","colors","colorAccessor","title","chartClassName","yAxisClassName","yAxisTickValues","yAxisLabel","yAxisLabelOffset","yAxisTickCount","yAxisFormatter","gridHorizontal","gridHorizontalStroke","gridHorizontalStrokeWidth","gridHorizontalStrokeDash","xAxisClassName","xAxisTickValues","xAxisLabel","xAxisLabelOffset","xAxisFormatter","gridVertical","gridVerticalStroke","gridVerticalStrokeWidth","gridVerticalStrokeDash","defaultProps","axesColor","schemeCategory20","idx","legendOffset","xAccessor","yAccessor","String","yValue","hoverAnimation","stackOffset","valuesAccessor","values"],"mappings":"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","file":"BarChart.js","sourcesContent":["import { h, Component } from 'preact'\nimport { Chart, XAxis, YAxis, Tooltip } from '../../common'\nimport * as d3 from 'd3'\n// import DataSeries from './DataSeries'\n\nclass BarChart extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttooltip: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tchild: '',\n\t\t\t\tshow: false\n\t\t\t},\n\t\t\tchangeState: false\n\t\t}\n\t}\n\tstatic defaultProps = {\n\t\taxesColor: '#000',\n\t\tcolors: d3.scaleOrdinal(d3.schemeCategory20),\n\t\tcolorAccessor: (d, idx) => idx,\n\t\theight: 200,\n\t\thorizontal: false,\n\t\tlegend: false,\n\t\tlegendOffset: 120,\n\t\ttitle: '',\n\t\twidth: 400,\n\t\t// xAxisFormatter: no predefined value right now\n\t\txAxisLabel: '',\n\t\txAxisLabelOffset: 38,\n\t\txAxisOffset: 0,\n\t\t// xAxisTickCount: no predefined value right now\n\t\t// xAxisTickInterval: no predefined value right now\n\t\t// xAxisTickValues: no predefined value right now\n\t\txOrient: 'bottom',\n\t\t// yAxisFormatter: no predefined value right now\n\t\tyAxisLabel: '',\n\t\tyAxisLabelOffset: 35,\n\t\tyAxisOffset: 0,\n\t\t// yAxisTickCount: no predefined value right now\n\t\t// yAxisTickInterval: no predefined value right now\n\t\t// yAxisTickValues: no predefined value right now\n\t\tyOrient: 'default',\n\t\txAccessor: (d) => d.x,\n\t\tyAccessor: (d) => d.y,\n\t\tshowTooltip: true,\n\t\ttooltipFormat: (d) => String(d.yValue),\n\t\tchartClassName: 'rd3-barchart',\n\t\thoverAnimation: true,\n\t\tmargins: { top: 10, right: 20, bottom: 40, left: 45 },\n\t\trangeRoundBandsPadding: 0.25,\n\t\tstackOffset: 'zero',\n\t\tvaluesAccessor: d => d.values,\n\t\txAxisClassName: 'rd3-barchart-xaxis',\n\t\tyAxisClassName: 'rd3-barchart-yaxis',\n\t\tyAxisTickCount: 4\n\t}\n\tcomponentWillReceiveProps() {\n\t\tthis.setState({\n\t\t\tchangeState: false\n\t\t})\n\t}\n\tgetViewBox() {\n\t\tif (this.props.viewBoxObject) {\n\t\t\tlet v = this.props.viewBoxObject\n\t\t\treturn [v.x, v.y, v.width, v.height].join(' ')\n\t\t} else if (this.props.viewBox) {\n\t\t\treturn this.props.viewBox\n\t\t}\n\t}\n\tgetDimensions() {\n\t\tlet props = this.props\n\t\tlet { horizontal, margins, viewBoxObject, xOrient, xAxisOffset, yAxisOffset } = props\n\t\tlet yOrient = this.getYOrient()\n\n\t\tlet width, height\n\t\tif (viewBoxObject) {\n\t\t\twidth = viewBoxObject.width,\n\t\t\theight = viewBoxObject.height\n\t\t} else {\n\t\t\twidth = props.width,\n\t\t\theight = props.height\n\t\t}\n\n\t\tlet svgWidth, svgHeight\n\t\tlet xOffset, yOffset\n\t\tlet svgMargins\n\t\tlet trans\n\t\tif (horizontal) {\n\t\t\tlet center = width / 2\n\t\t\ttrans = `rotate(90 ${center} ${center}) `\n\t\t\tsvgWidth = height\n\t\t\tsvgHeight = width\n\t\t\tsvgMargins = {\n\t\t\t\tleft: margins.top,\n\t\t\t\ttop: margins.right,\n\t\t\t\tright: margins.bottom,\n\t\t\t\tbottom: margins.left\n\t\t\t}\n\t\t} else {\n\t\t\ttrans = ''\n\t\t\tsvgWidth = width\n\t\t\tsvgHeight = height\n\t\t\tsvgMargins = margins\n\t\t}\n\n\t\txAxisOffset = Math.abs(props.xAxisOffset || 0)\n\t\tyAxisOffset = Math.abs(props.yAxisOffset || 0)\n\n\t\txOffset = svgMargins.left + (yOrient === 'left' ? yAxisOffset : 0)\n\t\tyOffset = svgMargins.top + (xOrient === 'top' ? xAxisOffset : 0)\n\t\ttrans += `translate(${xOffset}, ${yOffset})`\n\n\t\treturn {\n\t\t\tinnerHeight: svgHeight - svgMargins.top - svgMargins.bottom - xAxisOffset,\n\t\t\tinnerWidth: svgWidth - svgMargins.left - svgMargins.right - yAxisOffset,\n\t\t\ttrans,\n\t\t\tsvgMargins\n\t\t}\n\t}\n\tonMouseOver(x, y, dataPoint) {\n\t\tif (!this.props.showTooltip)\n\t\t\treturn\n\t\tthis.setState({\n\t\t\ttooltip: {\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tchild: this.props.tooltipFormat.call(this, dataPoint),\n\t\t\t\tshow: true\n\t\t\t},\n\t\t\tchangeState: true\n\t\t})\n\t}\n\tonMouseLeave() {\n\t\tif (!this.props.showTooltip)\n\t\t\treturn\n\t\tthis.setState({\n\t\t\ttooltip: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tchild: '',\n\t\t\t\tshow: false\n\t\t\t},\n\t\t\tchangeState: true\n\t\t})\n\t}\n\tgetYOrient() {\n\t\tlet yOrient = this.props.yOrient\n\n\t\tif (yOrient === 'default') {\n\t\t\treturn this.props.horizontal ? 'right' : 'left'\n\t\t}\n\n\t\treturn yOrient\n\t}\n\t_getStackedValuesMaxY(_data) {\n\t\tlet max = 0\n\t\td3.max(_data,d=>{\n\t\t\td3.max(d,(val)=>{\n\t\t\t\tmax = val > max ?val:max\n\t\t\t})\n\t\t})\n\t\treturn max\n\t}\n\t_getStackedValuesMinY(_data) {\n\t\tlet min = 0\n\t\td3.min(_data,d=>{\n\t\t\td3.min(d,(val)=>{\n\t\t\t\tmin = val < min ?val:min\n\t\t\t})\n\t\t})\n\t\treturn min\n\t}\n\t_getLabels(series) {\n\t\tlet data = []\n\t\tseries.forEach(d=>{\n\t\t\tdata.push(d.key)\n\t\t})\n\t\treturn data\n\t}\n\t_stack() {\n\t\t// Only support columns with all positive or all negative values\n\t\t// https://github.com/mbostock/d3/issues/2265\n\t\t// let { stackOffset, xAccessor, yAccessor, valuesAccessor } = this.props\n\t\treturn d3.stack()\n\t\t\t.keys([\"apples\", \"bananas\", \"cherries\", \"dates\"])\n\t\t\t.order(d3.stackOrderNone)\n\t\t\t.offset(d3.stackOffsetNone)\n\t}\n\trender() {\n\n\t\tlet props = this.props\n\t\tlet yOrient = this.getYOrient()\n\n\t\tlet _data = this._stack()(props.data)\n\t\tlet { innerHeight, innerWidth, trans, svgMargins } = this.getDimensions()\n\t\tlet xScale = d3.scaleOrdinal()\n\t\t\t.domain(this._getLabels(_data))\n\t\t\t.range([0, innerWidth], props.rangeRoundBandsPadding)\n\t\tlet yScale = d3.scaleLinear()\n\t\t\t.range([innerHeight, 0])\n\t\t\t.domain([Math.min(0, this._getStackedValuesMinY(_data[0])), this._getStackedValuesMaxY(_data[_data.length - 1])])\n\n\t\t// let series = props.data.map((item) => item.name)\n\n\t\treturn (\n\t\t\t<span>\n\t\t\t\t<Chart\n\t\t\t\t\tviewBox={this.getViewBox()}\n\t\t\t\t\tlegend={props.legend}\n\t\t\t\t\tdata={props.data}\n\t\t\t\t\tmargins={props.margins}\n\t\t\t\t\tcolors={props.colors}\n\t\t\t\t\tcolorAccessor={props.colorAccessor}\n\t\t\t\t\twidth={props.width}\n\t\t\t\t\theight={props.height}\n\t\t\t\t\ttitle={props.title}\n\t\t\t\t\tshouldUpdate={!this.state.changeState}\n\t\t\t\t>\n\t\t\t\t\t<g transform={trans} className={props.chartClassName}>\n\t\t\t\t\t\t<YAxis\n\t\t\t\t\t\t\tyAxisClassName={props.yAxisClassName}\n\t\t\t\t\t\t\tyAxisTickValues={props.yAxisTickValues}\n\t\t\t\t\t\t\tyAxisLabel={props.yAxisLabel}\n\t\t\t\t\t\t\tyAxisLabelOffset={props.yAxisLabelOffset}\n\t\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\t\tmargins={svgMargins}\n\t\t\t\t\t\t\tyAxisTickCount={props.yAxisTickCount}\n\t\t\t\t\t\t\ttickFormatting={props.yAxisFormatter}\n\t\t\t\t\t\t\twidth={innerWidth}\n\t\t\t\t\t\t\theight={innerHeight}\n\t\t\t\t\t\t\thorizontalChart={props.horizontal}\n\t\t\t\t\t\t\txOrient={props.xOrient}\n\t\t\t\t\t\t\tyOrient={yOrient}\n\t\t\t\t\t\t\tgridHorizontal={props.gridHorizontal}\n\t\t\t\t\t\t\tgridHorizontalStroke={props.gridHorizontalStroke}\n\t\t\t\t\t\t\tgridHorizontalStrokeWidth={props.gridHorizontalStrokeWidth}\n\t\t\t\t\t\t\tgridHorizontalStrokeDash={props.gridHorizontalStrokeDash}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<XAxis\n\t\t\t\t\t\t\txAxisClassName={props.xAxisClassName}\n\t\t\t\t\t\t\txAxisTickValues={props.xAxisTickValues}\n\t\t\t\t\t\t\txAxisLabel={props.xAxisLabel}\n\t\t\t\t\t\t\txAxisLabelOffset={props.xAxisLabelOffset}\n\t\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\t\tmargins={svgMargins}\n\t\t\t\t\t\t\ttickFormatting={props.xAxisFormatter}\n\t\t\t\t\t\t\twidth={innerWidth}\n\t\t\t\t\t\t\theight={innerHeight}\n\t\t\t\t\t\t\thorizontalChart={props.horizontal}\n\t\t\t\t\t\t\txOrient={props.xOrient}\n\t\t\t\t\t\t\tyOrient={yOrient}\n\t\t\t\t\t\t\tgridVertical={props.gridVertical}\n\t\t\t\t\t\t\tgridVerticalStroke={props.gridVerticalStroke}\n\t\t\t\t\t\t\tgridVerticalStrokeWidth={props.gridVerticalStrokeWidth}\n\t\t\t\t\t\t\tgridVerticalStrokeDash={props.gridVerticalStrokeDash}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <DataSeries\n\t\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\t\tmargins={svgMargins}\n\t\t\t\t\t\t\t_data={_data}\n\t\t\t\t\t\t\tseries={series}\n\t\t\t\t\t\t\twidth={innerWidth}\n\t\t\t\t\t\t\theight={innerHeight}\n\t\t\t\t\t\t\tcolors={props.colors}\n\t\t\t\t\t\t\tcolorAccessor={props.colorAccessor}\n\t\t\t\t\t\t\thoverAnimation={props.hoverAnimation}\n\t\t\t\t\t\t\tvaluesAccessor={props.valuesAccessor}\n\t\t\t\t\t\t\tonMouseOver={this.onMouseOver}\n\t\t\t\t\t\t\tonMouseLeave={this.onMouseLeave}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t</g>\n\t\t\t\t</Chart>\n\t\t\t\t{(props.showTooltip ? <Tooltip {...this.state.tooltip} /> : null)}\n\t\t\t</span>\n\t\t)\n\t}\n}\n\nexport default BarChart\n"]}